using gold.**
procedure main(args:String[]) begin
	GAutomataFrame.show(createTransducer())
end
var hola: Integer
function createTransducer():ITransducer begin
	Q:={"Inicio","Error","Numero","?",":","minus","mayus","f","a","i","l","i1","s","v","a1","r","a2","t","o","m","n","u","m","b","e","r"}
	CE:={' '}
	Σ:=('a'‥'z')∪('A'‥'Z')∪('0'‥'9')∪{'?',':'}
	q₀:="Inicio"
	F:={"Inicio"}
	return 	GDeterministicTransducer(Q,Σ,Σ,q₀,F,δ,g,h)
end
function δ(q,σ) begin
	if q="Inicio" then
		if σ='?' then
			return "?"
		elseif σ=':' then
			return ":"
		elseif σ∈('0'‥'9') then
			return "Numero"
		elseif σ='i' then
			return "i1"
		elseif σ∈('A'‥'Z') then
			return "mayus"
		elseif σ='f' then
			return "f"
		
		else
			return "Error"
		end
	elseif q="Numero" then
		if σ='?' then
			return "?"
		elseif σ=':' then
			return ":"
		elseif σ∈('0'‥'9') then
			return "Numero"
		elseif σ∈('0'‥'9') then
			return "Inicio"
		else
			return "Error"
		end
	else
		
	end	
end
function g(q) begin
	return λ
end
function h(q,σ) begin
	
end